Hoisting ist so ziemlich das erste Phänomen mit dem ein Entwickler bei JavaScript zu tun bekommt.
Es ist kein Fachausdruck aus der Spezifikation und doch ist er allgemein bekannt unter JavaScript Entwicklern.

Warum das Verhalten so ist, liegt wohl irgendwie in der Speicherverwaltung begründet.

Mit einfachen Worten lässt es sich so erklären:

Bei JavaScript werden die Deklarationen vom Übersetzer an den Anfang des Codes gezogen.
Somit lässt sich auf Elemente wie Variablen zugreifen obgleich diese im Kode noch gar nicht deklariert wurden.
Sie gelten ab da natürlich als undefiniert.
Erst mit der ersten Zuweisung erhalten diese einen wirklichen Wert.

So das war ja leicht. Klaro. Aber immer schön dran denken, in Wirklichkeit arbeitet der Übersetzer nicht so.
Es lässt sich so nur sehr einfach vorstellen und merken.

Das Verhalten gilt übrigens nicht nur für Variablen sondern auch für Funktionen.

